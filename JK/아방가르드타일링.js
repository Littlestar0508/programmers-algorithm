function solution(n) {
  const mod = 1_000_000_007;

  const dp = [1, 3, 10, 23, 62, 170];

  if (n < 7) return dp[n - 1];

  for (let i = 6; i < n; i++) {
    // 점화식 세워서 풀었음.. 이건 진짜 할 짓이 못됨..
    // 기존에 1,2,5의 패턴을 찾았고, 그 뒤로 해결이 안돼서 인터넷 서칭을 하다가 2,2,4의 추가적인 패턴이 있다는 것을 알게 됨
    // 이후 손으로 식 세워서 일반항에 대한 점화식을 세우고 그걸 활용해서 풀이
    // JS의 경우 % 연산이 음수가 나올 것을 대비하여 mod를 한 번 더하고 mod의 나머지를 구하는 방식으로 식 계산
    const sum = (dp[5] + 2 * dp[4] + 6 * dp[3] + dp[2] - dp[0] + mod) % mod;
    // 배열을 100_000 크기로 설정했다가 크기 제한 걸려서 크기가 6인 배열을 유지하는 방법
    dp.push(sum);
    dp.shift();
  }

  return dp[5];
}

console.log(solution(10));
